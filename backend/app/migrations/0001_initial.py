# Generated by Django 3.1.4 on 2022-07-22 07:44

import app.models.content_image
import app.models.profile_image
import app.models.user
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('modified_at', models.DateTimeField(auto_now=True, null=True)),
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(blank=True, max_length=50, null=True, verbose_name='名前')),
                ('birthday', models.DateField(blank=True, null=True, verbose_name='生年月日(西暦)')),
                ('email', models.EmailField(max_length=50, unique=True, verbose_name='メールアドレス')),
                ('user_type', models.IntegerField(choices=[(1, '一般利用者'), (9, 'スーパーユーザー')], default=1, verbose_name='ユーザータイプ')),
                ('sex', models.IntegerField(choices=[(0, 'woman'), (1, 'man'), (9, 'others')], default=0, verbose_name='性別')),
                ('biography', models.TextField(blank=True, max_length=255, null=True, verbose_name='自己紹介')),
                ('deleted', models.IntegerField(choices=[(0, 'ACTIVE'), (1, 'INACTIVE')], default=0, verbose_name='削除フラグ')),
                ('is_staff', models.BooleanField(default=False, verbose_name='is_staff')),
                ('is_active', models.BooleanField(default=True, verbose_name='is_active')),
                ('created_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='user_created_user', to=settings.AUTH_USER_MODEL)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('modified_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='user_modified_user', to=settings.AUTH_USER_MODEL)),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'db_table': 'user',
            },
            managers=[
                ('objects', app.models.user.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('modified_at', models.DateTimeField(auto_now=True, null=True)),
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('comment', models.TextField(blank=True, max_length=255, null=True, verbose_name='コメント内容')),
                ('like_count', models.IntegerField(blank=True, null=True, verbose_name='いいね数')),
                ('deleted', models.IntegerField(choices=[(0, 'ACTIVE'), (1, 'INACTIVE')], default=0)),
            ],
            options={
                'db_table': 'comment',
            },
        ),
        migrations.CreateModel(
            name='Content',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('modified_at', models.DateTimeField(auto_now=True, null=True)),
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=50, verbose_name='タイトル')),
                ('text', models.TextField(verbose_name='本文')),
                ('tag', models.CharField(blank=True, max_length=50, null=True, verbose_name='タグ')),
                ('like_count', models.IntegerField(default=0, verbose_name='いいね数')),
                ('comment_count', models.IntegerField(default=0, verbose_name='コメント数')),
                ('deleted', models.IntegerField(choices=[(0, 'ACTIVE'), (1, 'INACTIVE')], default=0)),
                ('created_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='content_created_user', to=settings.AUTH_USER_MODEL)),
                ('modified_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='content_modified_user', to=settings.AUTH_USER_MODEL)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='contents', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'content',
            },
        ),
        migrations.CreateModel(
            name='ProfileImage',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('modified_at', models.DateTimeField(auto_now=True, null=True)),
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('avatar_image', models.ImageField(blank=True, null=True, upload_to=app.models.profile_image.image_upload_path, verbose_name='プロフィール画像')),
                ('image_version', models.IntegerField(default=0, verbose_name='画像バージョン')),
                ('deleted', models.BooleanField(default=False, verbose_name='削除フラグ')),
                ('created_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='profileimage_created_user', to=settings.AUTH_USER_MODEL)),
                ('modified_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='profileimage_modified_user', to=settings.AUTH_USER_MODEL)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='profile_image', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'profile_image',
            },
        ),
        migrations.CreateModel(
            name='Follows',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('modified_at', models.DateTimeField(auto_now=True, null=True)),
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('created_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='follows_created_user', to=settings.AUTH_USER_MODEL)),
                ('from_user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='follows', to=settings.AUTH_USER_MODEL)),
                ('modified_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='follows_modified_user', to=settings.AUTH_USER_MODEL)),
                ('to_user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='followers', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'follow',
            },
        ),
        migrations.CreateModel(
            name='ContentLike',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('modified_at', models.DateTimeField(auto_now=True, null=True)),
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('content', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='like', to='app.content')),
                ('created_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='contentlike_created_user', to=settings.AUTH_USER_MODEL)),
                ('modified_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='contentlike_modified_user', to=settings.AUTH_USER_MODEL)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='like', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'content_like',
            },
        ),
        migrations.CreateModel(
            name='ContentImage',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('modified_at', models.DateTimeField(auto_now=True, null=True)),
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('image', models.ImageField(upload_to=app.models.content_image.image_upload_path, verbose_name='コンテンツ画像')),
                ('deleted', models.IntegerField(choices=[(0, 'ACTIVE'), (1, 'INACTIVE')], default=0)),
                ('content', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='contents', to='app.content')),
                ('created_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='contentimage_created_user', to=settings.AUTH_USER_MODEL)),
                ('modified_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='contentimage_modified_user', to=settings.AUTH_USER_MODEL)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_content_images', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'content_image',
            },
        ),
        migrations.CreateModel(
            name='CommentLike',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('modified_at', models.DateTimeField(auto_now=True, null=True)),
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('comment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='like', to='app.comment')),
                ('created_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='commentlike_created_user', to=settings.AUTH_USER_MODEL)),
                ('from_user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='comment_like', to=settings.AUTH_USER_MODEL)),
                ('modified_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='commentlike_modified_user', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'comment_like',
            },
        ),
        migrations.AddField(
            model_name='comment',
            name='content',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='comments', to='app.content'),
        ),
        migrations.AddField(
            model_name='comment',
            name='created_user',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='comment_created_user', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='comment',
            name='from_user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='send_comments', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='comment',
            name='modified_user',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='comment_modified_user', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='comment',
            name='to_user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='receive_comments', to=settings.AUTH_USER_MODEL),
        ),
    ]
